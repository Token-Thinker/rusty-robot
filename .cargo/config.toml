##########################################################
#                 Environment Variables                  #
##########################################################
[env]
DEFMT_LOG = "debug"
ESP_LOGLEVEL="DEBUG"


##########################################################
#                     Build Options                      #
##########################################################
[build]
target = "xtensa-esp32-none-elf"


##########################################################
#                   "General" Settings                   #
##########################################################
[unstable]
build-std = ["alloc", "core"]


##########################################################
#                     RP2040 Options                     #
##########################################################
[target.thumbv6m-none-eabi]
runner = "elf2uf2-rs -d"

# Pass some extra options to rustc, some of which get passed on to the linker.
#
# * linker argument --nmagic turns off page alignment of sections (which saves
#   flash space)
# * linker argument -Tlink.x tells the linker to use link.x as the linker
#   script. This is usually provided by the cortex-m-rt crate, and by default
#   the version in that crate will include a file called `memory.x` which
#   describes the particular memory layout for your specific chip.
# * inline-threshold=5 makes the compiler more aggressive and inlining functions
# * no-vectorize-loops turns off the loop vectorizer (seeing as the M0+ doesn't
#   have SIMD)

rustflags = [
  "-C", "link-arg=--nmagic",
  "-C", "link-arg=-Tlink.x",
  "-C", "inline-threshold=5",
  "-C", "no-vectorize-loops",
]


##########################################################
#                     ESP32 Options                      #
##########################################################
[target.'cfg(target_arch = "riscv32")']
runner    = "espflash flash --monitor"
rustflags = [
  "-C", "link-arg=-Tlinkall.x",
  "-C", "force-frame-pointers",
  "-C", "link-arg=-Trom_functions.x",
]

[target.'cfg(target_arch = "xtensa")']
runner    = "espflash flash --monitor"
rustflags = [
  # GNU LD
  "-C", "link-arg=-Wl,-Tlinkall.x",
  "-C", "link-arg=-nostartfiles",
  "-C", "link-arg=-Trom_functions.x",
]
